fails:Array#sample returns nil for an empty Array
fails:Array#sample returns a single value when not passed a count
fails:Array#sample returns an empty Array when passed zero
fails:Array#sample returns an Array of elements when passed a count
fails:Array#sample returns elements from the Array
fails:Array#sample returns at most the number of elements in the Array
fails:Array#sample does not return the same value if the Array has unique values
fails:Array#sample may return the same value if the array is not unique
fails:Array#sample calls #to_int to convert the count when passed an Object
fails:Array#sample raises ArgumentError when passed a negative count
fails:Array#sample does not return subclass instances with Array subclass
fails:Array#sample with options calls #to_hash to convert the passed Object
fails:Array#sample with options calls #to_int on the first argument and #to_hash on the second when passed Objects
fails:Array#sample with options calls #rand on the Object passed by the :random key in the arguments Hash
fails:Array#sample with options ignores an Object passed for the RNG if it does not define #rand
fails:Array#sample with options when the object returned by #rand is a Fixnum uses the fixnum as index
fails:Array#sample with options when the object returned by #rand is a Fixnum raises a RangeError if the value is less than zero
fails:Array#sample with options when the object returned by #rand is a Fixnum raises a RangeError if the value is equal to the Array size
fails:Array#sample when the object returned by #rand is not a Fixnum but responds to #to_int calls #to_int on the Object
fails:Array#sample when the object returned by #rand is not a Fixnum but responds to #to_int raises a RangeError if the value is less than zero
fails:Array#sample when the object returned by #rand is not a Fixnum but responds to #to_int raises a RangeError if the value is equal to the Array size
