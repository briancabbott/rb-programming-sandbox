fails:Array#pack with format 'M' ignores whitespace in the format string
fails:Array#pack with format 'M' calls #to_str to coerce the directives string
fails:Array#pack with format 'M' taints the output string if the format string is tainted
fails:Array#pack with format 'M' raises an ArgumentError if there are fewer elements than the format requires
fails:Array#pack with format 'M' encodes a recursive array
fails:Array#pack with format 'M' calls #to_s to convert an object to a String
fails:Array#pack with format 'M' converts the object to a String representation if #to_s does not return a String
fails:Array#pack with format 'M' encodes a Symbol as a String
fails:Array#pack with format 'M' encodes an Integer as a String
fails:Array#pack with format 'm' ignores whitespace in the format string
fails:Array#pack with format 'm' calls #to_str to coerce the directives string
fails:Array#pack with format 'm' taints the output string if the format string is tainted
fails:Array#pack with format 'm' raises an ArgumentError if there are fewer elements than the format requires
fails:Array#pack with format 'm' calls #to_str to convert an object to a String
fails:Array#pack with format 'm' raises a TypeError if #to_str does not return a String
fails:Array#pack with format 'm' raises a TypeError if passed nil
fails:Array#pack with format 'm' raises a TypeError if passed an Integer
